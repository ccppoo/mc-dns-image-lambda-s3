name: Deploy to AWS Lambda

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
      tags:
        description: "Test scenario tags"
        default: "manual trigger"
  push:
    branches:
      - main
    paths:
      - "!.github/**/*.yaml"
      # - "!.github/**/*.yml"
      - "!**/*.md"
      - "!.git*"
jobs:
  build:
    runs-on: ubuntu-latest
    # runs-on: ubuntu-24.04-arm -- NOTE: currently allowed for public repo 2025.02.20

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"

      - name: Install dependencies
        run: go mod tidy

      - name: Build the Go binary
        run: GOOS=linux GOARCH=arm64 go build -o bootstrap main.go

      - name: generate zip name
        env:
          ZIP_FILE_TAG: ${{ github.sha }}
        run: |
          echo "create file : function_$ZIP_FILE_TAG.zip"
          echo "ZIP_FILE_NAME=function_$ZIP_FILE_TAG.zip" >> $GITHUB_OUTPUT

      - name: Zip the binary
        run: zip ${{ steps.generate-zip-name.outputs.ZIP_FILE_NAME }} bootstrap

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp ${{ steps.generate-zip-name.outputs.ZIP_FILE_NAME }} s3://${{ secrets.AWS_MC_DNS_IMAGE_LAMBDA_S3_BUCKET }}

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name mc-dns-image-uploader \
            --s3-bucket ${{ secrets.AWS_MC_DNS_IMAGE_LAMBDA_S3_BUCKET }} \
            --s3-key ${{ steps.generate-zip-name.outputs.ZIP_FILE_NAME }}
